name: CI/CD

on:
  push:
    branches: [ "main" ]      # أي push على main = CI + Deploy Dev
    tags:     [ "v*" ]        # أي tag يبدأ بـ v = Deploy Prod
  workflow_dispatch: {}        # تشغيل يدوي لو حبيت

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm test

  deploy_dev:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: [self-hosted, pc, dev]   # لازم Labels دي تبقى على Runner بتاع الـ PC
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci --omit=dev
      - name: PM2 deploy (dev)
        run: |
          pm2 startOrReload ecosystem.config.js --env development
          pm2 save
      - name: Health check (dev)
        shell: powershell
        run: |
          $r = Invoke-WebRequest http://localhost:3000/hello -UseBasicParsing
          if ($r.StatusCode -ne 200) { throw "Health check failed" }

  deploy_prod:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: [self-hosted, lab, prod] # لازم Labels دي تبقى على Runner بتاع الـ Lab
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci --omit=dev
      - name: PM2 deploy (prod)
        run: |
          pm2 startOrReload ecosystem.config.js --env production
          pm2 save
      - name: Health check (prod)
        shell: powershell
        run: |
          $r = Invoke-WebRequest http://localhost:3000/hello -UseBasicParsing
          if ($r.StatusCode -ne 200) { throw "Health check failed" }
