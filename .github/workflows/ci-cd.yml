name: CI/CD

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  workflow_dispatch: {}

defaults:
  run:
    shell: cmd # شغّل كل أوامر run بــ CMD على ويندوز

jobs:
  deploy_dev:
    runs-on: [self-hosted, pc, dev]
    # متغيرات PM2 لكل خطوات الجوب
    env:
      PM2_HOME: C:\pm2\dev
      PM2_RPC_PORT: \\.\pipe\pm2-${{ github.run_id }}-rpc
      PM2_PUB_PORT: \\.\pipe\pm2-${{ github.run_id }}-pub
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Prepare PM2 home
        run: if not exist "%PM2_HOME%" mkdir "%PM2_HOME%"

      - name: Install dependencies
        run: npm ci --omit=dev

        # شغّل/ابدأ من جديد باسم demo-ci
      - name: PM2 start/restart (dev)
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          echo "Current directory: %CD%"
          echo "PM2_HOME: %PM2_HOME%"
          echo "PM2_RPC_PORT: %PM2_RPC_PORT%"
          echo "PM2_PUB_PORT: %PM2_PUB_PORT%"
          node -v
          call node -e "require('express'); console.log('express OK')"
          call node -e "require('fs').accessSync('./index.js'); console.log('index file OK')"
          call node -e "require('fs').accessSync('./ecosystem.config.js'); console.log('ecosystem.config.js OK')"
          npx --yes pm2 -v
          npx --yes pm2 delete demo-ci 2>NUL || echo "No existing process to delete"
          echo "Starting PM2 with ecosystem.config.js..."
          npx --yes pm2 start ecosystem.config.js
          echo "PM2 start completed, checking status..."
          npx --yes pm2 list
          npx --yes pm2 save
          rem شوف اللي شغّال فورًا بنفس الـ env
          npx --yes pm2 describe demo-ci || echo "Could not describe demo-ci"
          rem انتظر قليلاً للتطبيق يبدأ
          timeout /t 5 /nobreak >NUL
          echo "Final PM2 status check..."
          npx --yes pm2 list

      - name: Health check (dev)
        run: |
          setlocal enabledelayedexpansion
          set OK=0
          for /l %%i in (1,1,10) do (
            echo [Try %%i/10] Checking /hello ...
            curl -sSf http://localhost:3000/hello >NUL && set OK=1 && goto :HELLO_OK
            timeout /t 2 /nobreak >NUL
          )
          :HELLO_OK
          if not "!OK!"=="1" exit /b 1

          set OK=0
          for /l %%i in (1,1,10) do (
            echo [Try %%i/10] Checking /bye ...
            curl -sSf http://localhost:3000/bye >NUL && set OK=1 && goto :BYE_OK
            timeout /t 2 /nobreak >NUL
          )
          :BYE_OK
          if not "!OK!"=="1" exit /b 1
          endlocal

      - name: PM2 debug (only if failed)
        if: failure()
        run: |
          npx --yes pm2 list
          npx --yes pm2 describe demo-ci || echo (no describe)
          echo ===== logs dir =====
          dir "%PM2_HOME%\logs"
          echo ===== error log =====
          type "%PM2_HOME%\logs\demo-ci-error.log" 2> NUL || echo (no error log)
          echo ===== out log =====
          type "%PM2_HOME%\logs\demo-ci-out.log"  2> NUL || echo (no out log)

  deploy_prod:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: [self-hosted, lab, prod]
    environment: { name: production }
    env:
      PM2_HOME: C:\pm2\prod
      PM2_RPC_PORT: \\.\pipe\pm2-${{ github.run_id }}-rpc
      PM2_PUB_PORT: \\.\pipe\pm2-${{ github.run_id }}-pub
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Prepare PM2 home
        run: if not exist "%PM2_HOME%" mkdir "%PM2_HOME%"

      - name: Install dependencies
        run: npm ci --omit=dev

      - name: PM2 start/restart (prod)
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          echo "Current directory: %CD%"
          echo "PM2_HOME: %PM2_HOME%"
          echo "PM2_RPC_PORT: %PM2_RPC_PORT%"
          echo "PM2_PUB_PORT: %PM2_PUB_PORT%"
          call node -e "require('fs').accessSync('./ecosystem.config.js'); console.log('ecosystem.config.js OK')"
          npx --yes pm2 delete demo-ci 2>NUL || echo "No existing process to delete"
          echo "Starting PM2 with ecosystem.config.js..."
          npx --yes pm2 start ecosystem.config.js
          echo "PM2 start completed, checking status..."
          npx --yes pm2 list
          npx --yes pm2 save
          npx --yes pm2 describe demo-ci || echo "Could not describe demo-ci"
          rem انتظر قليلاً للتطبيق يبدأ
          timeout /t 5 /nobreak >NUL
          echo "Final PM2 status check..."
          npx --yes pm2 list

      - name: Health check (prod)
        run: |
          setlocal enabledelayedexpansion
          set OK=0
          for /l %%i in (1,1,10) do (
            echo [Try %%i/10] Checking /hello ...
            curl -sSf http://localhost:3000/hello >NUL && set OK=1 && goto :HELLO_OK
            timeout /t 2 /nobreak >NUL
          )
          :HELLO_OK
          if not "!OK!"=="1" exit /b 1

          set OK=0
          for /l %%i in (1,1,10) do (
            echo [Try %%i/10] Checking /bye ...
            curl -sSf http://localhost:3000/bye >NUL && set OK=1 && goto :BYE_OK
            timeout /t 2 /nobreak >NUL
          )
          :BYE_OK
          if not "!OK!"=="1" exit /b 1
          endlocal

      - name: PM2 debug (only if failed)
        if: failure()
        run: |
          npx --yes pm2 list
          npx --yes pm2 describe demo-ci || echo (no describe)
          dir "%PM2_HOME%\logs"
          type "%PM2_HOME%\logs\demo-ci-error.log" 2> NUL || echo (no error log)
          type "%PM2_HOME%\logs\demo-ci-out.log"  2> NUL || echo (no out log)
