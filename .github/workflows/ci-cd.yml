name: CI/CD

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

defaults:
  run:
    shell: cmd

jobs:
  deploy_dev:
    runs-on: [self-hosted, pc, dev]
    env:
      PM2_HOME: C:\pm2\dev
      HOME: C:\pm2\dev
      PM2_RPC_PORT: \\.\pipe\pm2-${{ github.run_id }}-rpc
      PM2_PUB_PORT: \\.\pipe\pm2-${{ github.run_id }}-pub

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Prepare PM2 dir
        run: if not exist "%PM2_HOME%" mkdir "%PM2_HOME%"

      - name: Install deps
        run: npm ci --omit=dev

      - name: PM2 clean start
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          echo CWD=%CD%
          npx --yes pm2 -v
          npx --yes pm2 kill || ver >NUL
          npx --yes pm2 delete demo-ci || ver >NUL
          npx --yes pm2 start "%CD%\index.js" --name demo-ci --time ^
            -o "%PM2_HOME%\logs\demo-ci-out.log" ^
            -e "%PM2_HOME%\logs\demo-ci-error.log" ^
            --merge-logs --update-env
          npx --yes pm2 list
          npx --yes pm2 describe demo-ci
          npx --yes pm2 save
          type "%PM2_HOME%\logs\demo-ci-error.log" 2>NUL || echo (no error log)
          type "%PM2_HOME%\logs\demo-ci-out.log"  2>NUL || echo (no out log)

      - name: Health check
        run: |
          set OK=1
          for /L %%i in (1,1,20) do (
            echo [%%i/20] GET /hello
            curl -s http://localhost:3000/hello >NUL && set OK=0 && goto H1
            timeout /t 2 /nobreak >NUL
          )
          :H1
          if %OK% NEQ 0 exit /b 1

          set OK=1
          for /L %%i in (1,1,20) do (
            echo [%%i/20] GET /bye
            curl -s http://localhost:3000/bye >NUL && set OK=0 && goto H2
            timeout /t 2 /nobreak >NUL
          )
          :H2
          if %OK% NEQ 0 exit /b 1

      - name: PM2 debug (on fail)
        if: failure()
        run: |
          npx --yes pm2 list
          npx --yes pm2 describe demo-ci || echo (no describe)
          dir "%PM2_HOME%\logs"
          type "%PM2_HOME%\logs\demo-ci-error.log" 2> NUL || echo (no error log)
          type "%PM2_HOME%\logs\demo-ci-out.log"  2> NUL || echo (no out log)
