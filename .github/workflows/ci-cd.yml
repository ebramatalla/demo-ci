name: CI/CD

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

defaults:
  run:
    shell: cmd

jobs:
  deploy_dev:
    runs-on: [self-hosted, pc, dev]
    env:
      PM2_HOME: C:\pm2\dev
      HOME: C:\pm2\dev
      PM2_RPC_PORT: \\.\pipe\pm2-${{ github.run_id }}-rpc
      PM2_PUB_PORT: \\.\pipe\pm2-${{ github.run_id }}-pub
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install deps (prod only)
        run: npm ci --omit=dev

      - name: Ensure PM2 dir
        run: if not exist "%PM2_HOME%" mkdir "%PM2_HOME%"

      - name: Start / Restart with PM2
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          echo CWD=%CD%
          npx --yes pm2 -v
          npx --yes pm2 startOrReload ecosystem.config.js --env development
          npx --yes pm2 save
          npx --yes pm2 list
          npx --yes pm2 describe demo-ci || ver >NUL

      - name: Health check
        run: |
          echo Checking endpoints with PowerShell...
          powershell -NoProfile -Command ^
            "$urls=@('http://localhost:3000/hello','http://localhost:3000/bye');" ^
            "foreach($u in $urls){$ok=$false;1..20|%%{try{Invoke-WebRequest -UseBasicParsing -TimeoutSec 3 $u|Out-Null;$ok=$true;break}catch{Start-Sleep -s 2}};if(-not $ok){throw \"Health check failed: $u\"}}"

      - name: PM2 debug (on failure)
        if: failure()
        run: |
          npx --yes pm2 list
          npx --yes pm2 describe demo-ci || ver >NUL
          if exist "%PM2_HOME%\logs" dir "%PM2_HOME%\logs"
          if exist "%PM2_HOME%\logs\demo-ci-error.log" type "%PM2_HOME%\logs\demo-ci-error.log"
          if exist "%PM2_HOME%\logs\demo-ci-out.log"  type "%PM2_HOME%\logs\demo-ci-out.log"
